#!/bin/bash

if [[ -n "${STRATOS_BP_DEBUG}" ]]; then
  echo "Turning on bash traces as instructed in STRATOS_BP_DEBUG=${STRATOS_BP_DEBUG}"
  echo "Undefine the variable to turn debugging off"
  set -x
fi

set -euo pipefail

BUILD_DIR=$1
CACHE_DIR=$2
export BUILDPACK_DIR=`dirname $(readlink -f ${BASH_SOURCE%/*})`
NEED_NODE=true

if [ -f $BUILD_DIR/stratos-debug ]; then
  ${BUILDPACK_DIR}/bin/debug $1 $2
fi

function show_time () {
  num=$1
  min=0
  sec=$num
  if ((num>59)); then
    ((sec=num%60))
    ((min=num/60))
  fi

  echo "-----> ${min}m ${sec}s"
}

START_TIME=`date +%s`

echo " "
echo "   _____ __             __            "
echo "  / ___// /__________ _/ /_____  _____"
echo "  \__ \/ __/ ___/ __ \`/ __/ __ \/ ___/"
echo " ___/ / /_/ /  / /_/ / /_/ /_/ (__  ) "
echo "/____/\__/_/   \__,_/\__/\____/____/  "
echo " "
echo "Stratos Buildpack V3"
echo " "
echo "-----> Stack ${CF_STACK}"

# Don't need node if the frontend UI is pre-built and we're using dep
if [ -f "$BUILD_DIR/stratos-frontend-prebuild.zip" ] && [ -f  "$BUILD_DIR/Gopkg.toml" ]; then
  NEED_NODE=false
fi

# Install go
source "$BUILDPACK_DIR/scripts/install_go.sh"
export PATH=$GoInstallDir/go/bin:$PATH

# Install node if needed
if [ "$NEED_NODE" == "true" ]; then
  # Install nodejs
  source "$BUILDPACK_DIR/scripts/install_nodejs.sh"
  export PATH=$NodeDir/bin:$PATH
fi

echo "-----> Checking versions"
if [ "$NEED_NODE" == "true" ]; then
  echo "---------> Node Version: `node --version`"
  echo "---------> NPM Version: `npm --version`"
fi

echo "---------> Go Version: `go version`"

# Store the node_modules in the cache folder via a symlink
if [ ! -d "$CACHE_DIR" ]; then
  echo "Cache directory [$CACHE_DIR] does not exist"
  mkdir -p "$CACHE_DIR"
else
  echo "Cache directory [$CACHE_DIR] exists"
fi

# Setup cache folders for npm
if [ ! -d "$CACHE_DIR/npm_cache" ]; then
  mkdir -p "$CACHE_DIR/npm_cache"
fi

if [ "$NEED_NODE" == "true" ]; then
  npm config set cache $CACHE_DIR/npm_cache
fi

echo "-----> Running stratos build compile [`date +%H:%M:%S`]"

# Build Stratos
$BUILD_DIR/deploy/cloud-foundry/build.sh $BUILD_DIR $CACHE_DIR

echo "-----> Stratos build complete [`date +%H:%M:%S`]"
echo "-----> Build time:"
END_TIME=`date +%s`
show_time $(($END_TIME - $START_TIME))

chmod +x "/tmp"